Grammar
start = envelope
envelope = element {http://schemas.xmlsoap.org/soap/envelope/}Envelope {
envelope-content
}

header = element {http://schemas.xmlsoap.org/soap/envelope/}Header {
header-content
}

body = element {http://schemas.xmlsoap.org/soap/envelope/}Body {
body-content
}

envelope-content = (header, body)
header-content = (target, identifier, sender?, twoway?, response?)
body-content = invoke
target = element {http://www.hiit.fi/fuego/fc/mts}target {
xsd:string
}

identifier = element {http://www.hiit.fi/fuego/fc/mts}identifier {
xsd:int
}

sender = element {http://www.hiit.fi/fuego/fc/mts}sender {
xsd:string
}

twoway = element {http://www.hiit.fi/fuego/fc/mts}twoway {
empty
}

response = element {http://www.hiit.fi/fuego/fc/mts}response {
xsd:int
}

invoke = element {http://www.hiit.fi/fuego/fc/mts}invoke {
message
}

message = element {}message {
message-content
}

message-content = notification
notification = element {}data {
(attribute {http://www.w3.org/2001/XMLSchema-instance}type { "ev:notification" }, notification-value, element {}type {
xsd:string
}
, element {}order {
xsd:int
}
, element {}deadline {
xsd:long
}
, element {}priority {
xsd:int
}
, element {}ra {
xsd:boolean
}
, element {}rid {
xsd:string
}
?, element {}id {
xsd:string
}
?, element {}ac {
xsd:string
}
?)
}

notification-value = element {}value {
(attribute {http://www.w3.org/2001/XMLSchema-instance}type { "ev:value" }, triplet*)
}

simple-notification-value = element {}value {
(attribute {http://www.w3.org/2001/XMLSchema-instance}type { "ev:value" }, simple-triplet*)
}

simple-triplet = element {http://www.hiit.fi/fuego/fc/notify}triplet {
(attribute {http://www.w3.org/2001/XMLSchema-instance}type { "ev:triplet" }, element {}name {
xsd:string
}
, (element {}int {
xsd:int
}
 | element {}boolean {
xsd:boolean
}
 | element {}double {
xsd:double
}
 | element {}string {
xsd:string
}
 | element {}date {
xsd:dateTime
}
))
}

triplet = element {http://www.hiit.fi/fuego/fc/notify}triplet {
(attribute {http://www.w3.org/2001/XMLSchema-instance}type { "ev:triplet" }, element {}name {
xsd:string
}
, (element {}int {
xsd:int
}
 | element {}boolean {
xsd:boolean
}
 | element {}double {
xsd:double
}
 | element {}string {
xsd:string
}
 | element {}date {
xsd:dateTime
}
 | element {}serialized {
(attribute {http://www.w3.org/2001/XMLSchema-instance}type { "ev:notification" }, simple-notification-value, element {}type {
xsd:string
}
, element {}source {
xsd:string
}
, element {}order {
xsd:int
}
, element {}deadline {
xsd:long
}
, element {}priority {
xsd:int
}
, element {}ra {
xsd:boolean
}
, element {}rid {
xsd:string
}
?, element {}id {
xsd:string
}
?, element {}ac {
xsd:string
}
?)
}
))
}


