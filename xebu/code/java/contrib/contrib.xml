<?xml version="1.0"?>
<!--
Copyright 2006 Helsinki Institute for Information Technology

This file is a part of Fuego middleware.  Fuego middleware is free
software; you can redistribute it and/or modify it under the terms
of the MIT license, included as the file MIT-LICENSE in the Fuego
middleware source distribution.  If you did not receive the MIT
license with the distribution, write to the Fuego Core project at
fuego-core-users@hoslab.cs.helsinki.fi.
-->
<!-- 

Fuego Core Contrib builder
==========================

The purpose of this build file is to fetch all required contrib stuff from
a reliable source. The main mechanism is the <wget> macro which has the
following attributes. 

id: Unqiue id of the task. You must assign a unique id to the task 
    that Ant can use for property names.

target: name of target file that is fetched

href1,href2: Links to the package holding the target file. href1 is first tried,
then href2 if href1 fails. Note use of ${proto} prefix which allows us to
swap all URIs to e.g. point to the local file system (fast testing).

sha: sha1 hash that the target file must have after download. Used to
verify that we got the right file. We also check the hash before downloading
to see if perhaps the target is already up-to-date. Thus, if a hash is given,
we only download a file if necessary.

target.get: Name to store downloaded package in. Set to target is not
explicitly given. Use with unpack

unpack1,unpack2: Ant tasks to call to unpack the downloaded packages.
unpack1 is for href1, unpack2 for href2.

unpackloc1: Passed as a propoert to unpacker; set to . if not given.
Used here for unpacking to a named subdir of ${src} 

Source packages are handled by downloading the package to ${sarch},
checking its hash, and then unpacking to ${src}

A few tips to minimize network use:

1) Multiple jars from one package: make an unpack that unpacks all
jars. Use separate <wgets> for each jar. Correct hashes will 
ensure the package is only downloaded+unpacked once (all other jars
in the package succeed by hash after this; see portmap,jrpcgen,oncrpc)

2) Shared binary and source package: download the package to ${sarch},
and let it stay there + use unified unpack. That way bin/src get
will automatically complete the src/bin variant as well.
See proguard and proguard-src.

3) Use as small packages as possible. On bad example is the servlet-apis.jar
which pulls Apache Tomcat :(

-->

<project name="fc-contrib" default="binaries" basedir=".">

  <property name="lib" value="jar" />
  <property name="sarch" value="src/archives" />
  <property name="src" value="src" />
  <!-- Use of ${proto} as URI prefix allows us to easily test with
       contrib modules on a local fs -->
  <property name="contrib.uri.prefix" value="http:/" />
  <property name="proto" value="${contrib.uri.prefix}" />
  <property name="sourceforge" value="dl.sourceforge.net" />
  <tempfile property="temp.file" />
  <tempfile property="temp.dir" />

  <import file="../../../utils/contrib-helper.xml" />

  <target name="mkdirs">
    <mkdir dir="${lib}" />
    <mkdir dir="${sarch}" />
    <echo>NOTE:     The availability of files on SourceForge.net mirrors has been found to be
          unpredictable. If you get an error during unpack, you most likely got an HTML 
          file from a sourecforge mirror instead of the real file. Retry with
          
          ant -Dsoureforge=[mirror].dl.soureforge.net 
           
          where mirror is some mirror name, e.g. belnet, switch, easynews, etc.</echo>

  </target>

  <target name="binaries" depends="mkdirs">

    <!--antenna-bin-0.9.13.jar-->
    <wget id="antenna"
          href1="${proto}/${sourceforge}/sourceforge/antenna/antenna-bin-0.9.13.jar"
          target="${lib}/antenna-bin-0.9.13.jar"
          sha="1efe7b0693e3085d1a24946dd73e7a5f57e5a83d" />

    <!--bcel.jar -->
      <!-- Used by findbugs -->
      <!--<wget id="bcel"
          href1="${proto}/archive.apache.org/dist/jakarta/bcel/binaries/bcel-5.1.tar.gz"
          target.get="${temp.file}"
          target="${lib}/bcel-5.1.jar"
          unpack1="unpack-tgz-bin"
          unpackloc1="bcel-5.1/bcel-5.1.jar"
          sha="a3288784cacd97a429c0cf177c84225523790f87" />-->

    <!--bsh-1.2b7.jar-->
      <!-- Consider moving to 1.3.0 as sources for 1.2b7 is in CVS only -->
    <wget id="Beanshell"
          href1="${proto}/www.beanshell.org/bsh-1.2b7.jar"
          target="${lib}/bsh-1.2b7.jar"
          sha="2c956ae8748c8a9bb782051bb9dba88d961b7839" />

    <!--commons-discovery.jar -->
    <wget id="commons-discovery"
          href1="${proto}/archive.apache.org/dist/jakarta/commons/discovery/binaries/commons-discovery-0.2.tar.gz"
          target="${lib}/commons-discovery.jar"
          target.get="${temp.file}"
          unpack1="unpack-tgz-bin"
          unpackloc1="commons-discovery-0.2/commons-discovery.jar"
          sha="7773ac7a7248f08ed2b8d297c6e2ef28260640ea" />
          
    <!--commons-logging.jar-->
    <wget id="commons-logging"
          href1="${proto}/archive.apache.org/dist/jakarta/commons/logging/binaries/commons-logging-1.0.4.tar.gz"
          target="${lib}/commons-logging.jar"
          target.get="${temp.file}"
          unpack1="unpack-tgz-bin"
          unpackloc1="commons-logging-1.0.4/commons-logging.jar"
          sha="f029a2aefe2b3e1517573c580f948caac31b1056" />
          
    <!--log4j-1.2.8.jar-->
    <wget id="log4j"
          href1=
"${proto}/archive.apache.org/dist/logging/log4j/1.2.8/jakarta-log4j-1.2.8.tar.gz"
          target="${lib}/log4j-1.2.8.jar"
          target.get="${sarch}/jakarta-log4j-1.2.8.tar.gz"
          unpack1="unpack-log4j"
          sha="3640dd71069d7986c9a14d333519216f4ca5c094" />

    <!--bcel.jar, dom4j-full.jar, findbugs-ant.jar,findbugs.jar-->
    <wget id="bcel"
          href1="${proto}/${sourceforge}/sourceforge/findbugs/findbugs-0.9.4.tar.gz"
          target="${lib}/bcel.jar"
          target.get="${temp.file}"
          unpack1="unpack-findbugs-bin"
          sha="75741e28d5396ed8230bdf334771b76279f60bf9" />

    <wget id="dom4j"
          href1="${proto}/${sourceforge}/sourceforge/findbugs/findbugs-0.9.4.tar.gz"
          target="${lib}/dom4j-full.jar"
          target.get="${temp.file}"
          unpack1="unpack-findbugs-bin"
          sha="69e7812ed2309b4c3713d3961260cb9458ddd5a1" />

    <wget id="findbugs"
          href1="${proto}/${sourceforge}/sourceforge/findbugs/findbugs-0.9.4.tar.gz"
          target="${lib}/findbugs.jar"
          target.get="${temp.file}"
          unpack1="unpack-findbugs-bin"
          sha="574aad6cefe0a5076d86dcd61af4e48e09813cb3" />

    <wget id="findbugs-ant"
          href1="${proto}/${sourceforge}/sourceforge/findbugs/findbugs-0.9.4.tar.gz"
          target="${lib}/findbugs-ant.jar"
          target.get="${temp.file}"
          unpack1="unpack-findbugs-bin"
          sha="e312bdad752c6ee1302cad763ed6cdbea2999cc7" />

    <wget id="coreplugin"
          href1="${proto}/${sourceforge}/sourceforge/findbugs/findbugs-0.9.4.tar.gz"
          target="${lib}/coreplugin.jar"
          target.get="${temp.file}"
          unpack1="unpack-findbugs-bin"
          sha="fe2cfe1c082e28124e889d8f774eb3cdc201f61c" />

    <!--java-getopt-1.0.12.jar-->
    <wget id="java-getopt"
          href1="${proto}/www.urbanophile.com/arenn/hacking/getopt/java-getopt-1.0.12.jar"
          target="${lib}/java-getopt-1.0.12.jar"
          sha="9000468778bc51f358f5487b2e0c3db0f47af169" />

    <!--junit.jar-->
    
    <wget id="junit"
          href1="${proto}/${sourceforge}/sourceforge/junit/junit3.8.1.zip"
          target="${lib}/junit.jar"
          target.get="${sarch}/junit3.8.1.zip"
          unpack1="unpack-junit"
          sha="99129f16442844f6a4a11ae22fbbee40b14d774f" />
    
    <!--kxml2.jar-->
    <wget id="kxml2"
          href1="${proto}/${sourceforge}/sourceforge/kxml/kxml2-2.2.2.jar"
          target="${lib}/kxml2.jar"
          sha="a36b83b7591ad9ccb7d3d11dc32b97f6497cf22b" />

    <!--proguard.jar NOTE: Src and bin package the same, so getting one will get the other-->
    <wget id="proguard"
          href1="${proto}/${sourceforge}/sourceforge/proguard/proguard3.5.tar.gz"
          target.get="${sarch}/proguard3.5.tar.gz"
          target="${lib}/proguard.jar"
          unpack1="unpack-proguard"
          sha="4b5a9ce786d00f53c9687fe0affb65a864cb6f3f" />
    
    <!--xercesImpl.jar, xmlParserAPIs.jar-->
    <wget id="xerces-impl"
          href1=
"${proto}/archive.apache.org/dist/xml/xerces-j/old_xerces2/Xerces-J-bin.2.4.0.tar.gz"
          target="${lib}/xercesImpl.jar"
          target.get="${temp.file}"
          unpack1="unpack-xerces-bin"
          sha="9d4fca1a12e9e06764eb530e8de2353921f0e437" />

    <wget id="xml-parser-apis"
          href1=
"${proto}/archive.apache.org/dist/xml/xerces-j/old_xerces2/Xerces-J-bin.2.4.0.tar.gz"
          target="${lib}/xmlParserAPIs.jar"
          target.get="${temp.file}"
          unpack1="unpack-xerces-bin"
          sha="5f3baec73262ebebc87a457fb24012bedb6f0ca6" />
    
  </target>

  <target name="unpack-tgz-bin" >
    <mkdir dir="${temp.dir}" />
    <untar src="${target.get}" dest="${temp.dir}" compression="gzip" />
    <copy file="${temp.dir}/${unpackloc1}" tofile="${target}" 
          overwrite="true" />
    <delete dir="${temp.dir}" />
    <delete file="${target.get}" />
  </target>


  <target name="unpack-proguard" >
    <untar src="${target.get}" dest="${src}" compression="gzip" />
    <copy file="${src}/proguard3.5/lib/proguard.jar" tofile="${lib}/proguard.jar" 
          overwrite="true" />
  </target>

  <target name="unpack-xerces-bin" >
    <mkdir dir="${temp.dir}" />
    <untar src="${target.get}" dest="${temp.dir}" compression="gzip" />
    <copy file="${temp.dir}/xerces-2_4_0/xercesImpl.jar" tofile="${lib}/xercesImpl.jar" 
          overwrite="true" />
    <copy file="${temp.dir}/xerces-2_4_0/xmlParserAPIs.jar" tofile="${lib}/xmlParserAPIs.jar" 
          overwrite="true" />
    <delete dir="${temp.dir}" />
    <delete file="${target.get}" />
  </target>

  <target name="unpack-findbugs-bin" >
    <mkdir dir="${temp.dir}" />
    <untar src="${target.get}" dest="${temp.dir}" compression="gzip" />
    <copy file="${temp.dir}/findbugs-0.9.4/lib/findbugs.jar" 
          tofile="${lib}/findbugs.jar" overwrite="true" />
    <copy file="${temp.dir}/findbugs-0.9.4/lib/findbugs-ant.jar" 
          tofile="${lib}/findbugs-ant.jar" overwrite="true" />
    <copy file="${temp.dir}/findbugs-0.9.4/lib/bcel.jar" 
          tofile="${lib}/bcel.jar" overwrite="true" />
    <copy file="${temp.dir}/findbugs-0.9.4/lib/dom4j-full.jar" 
          tofile="${lib}/dom4j-full.jar" overwrite="true" />
    <copy file="${temp.dir}/findbugs-0.9.4/plugin/coreplugin.jar" 
	  tofile="${lib}/coreplugin.jar" overwrite="true" />
    <delete dir="${temp.dir}" />
    <delete file="${target.get}" />
  </target>

  <target name="unpack-junit" >
    <unzip src="${target.get}" dest="${src}" />
    <copy file="${src}/junit3.8.1/junit.jar" tofile="${lib}/junit.jar" 
          overwrite="true" />
  </target>

  <target name="unpack-log4j" >
    <untar src="${target.get}" dest="${src}" compression="gzip" />
    <copy file="${src}/jakarta-log4j-1.2.8/dist/lib/log4j-1.2.8.jar" 
          tofile="${lib}/log4j-1.2.8.jar" 
          overwrite="true" />
  </target>

  <target name="source">
    <mkdir dir="${sarch}" />

    <!--antenna-bin-0.9.13.jar-->
    <wget id="antenna-src"
          href1="${proto}/${sourceforge}/sourceforge/antenna/antenna-src-0.9.13.zip"
          target="${sarch}/antenna-src-0.9.13.zip"
          unpack1="unpack-zip-src"
          unpackloc1="antenna"
          sha="b7f5e749dcde86ae7e0f7f52c4b04f18fad4a061" />

    <!--bcel.jar-->
    <wget id="bcel-src"
          href1="${proto}/archive.apache.org/dist/jakarta/bcel/source/bcel-5.1-src.zip"
          target="${sarch}/bcel-5.1-src.zip"
          unpack1="unpack-zip-src"
          sha="57382ebb3c01b3b97387772e1cdd08d12f574284" />    

    <!--bsh-1.2b7.jar, FIXME Tancred: source only in CVS-->

    <!-- commons-discovery.jar -->
    <wget id="commons-discovery-src"
          href1="${proto}/archive.apache.org/dist/jakarta/commons/discovery/source/commons-discovery-0.2-src.zip"
          target="${sarch}/commons-discovery-0.2-src.zip"
          unpack1="unpack-zip-src"
          sha="b8dc539ad8b6ce3a5aec19cf25d23099218645f4" />
          
    <!--commons-logging.jar-->
    <wget id="commons-logging-src"
          href1="${proto}/archive.apache.org/dist/jakarta/commons/logging/source/commons-logging-1.0.4-src.zip"
          target="${sarch}/commons-logging-1.0.4-src.zip"
          unpack1="unpack-zip-src"
          sha="128b2cc549c547ddc1c30b4bee8e503fbf7316bd" />   

    <!--dom4j-full.jar-->

    <wget id="dom4j-src"
          href1="${proto}/${sourceforge}/sourceforge/dom4j/dom4j-1.6.1.tar.gz"
          target="${sarch}/dom4j-1.6.1.tar.gz"
          unpack1="unpack-tgz-src"
          sha="8a2ab8af1dd039c449032ad50f3dd050647d7ce8" />

    <!--findbugs-ant.jar, findbugs.jar-->
    <wget id="findbugs-src"
          href1="${proto}/${sourceforge}/sourceforge/findbugs/findbugs-0.9.4-source.zip"
          target="${sarch}/findbugs-0.9.4-source.zip"
          unpack1="unpack-zip-src"
          sha="22c815bd50ade79582e5bc2894e3f97b9a4564fa" />

    <!--java-getopt-1.0.12.jar-->
    <wget id="java-getopt-src"
          href1="${proto}/www.urbanophile.com/arenn/hacking/getopt/java-getopt-1.0.12.tar.gz"
          target="${sarch}/java-getopt-1.0.12.tar.gz"
          unpack1="unpack-tgz-src"
          unpackloc1="java-getopt"
          sha="2b08ceef5016b91e0333d1e552683784fff86803" />

    <!--junit.jar-->

    <wget id="junit-src"
          href1="${proto}/${sourceforge}/sourceforge/junit/junit3.8.1.zip"
          target="${sarch}/junit3.8.1.zip"
          unpack1="unpack-junit"
          sha="049bcda1172e4190925d0d343fcc32158d4f1089" />

    <!--kxml2.jar-->
    <wget id="kxml2-src"
          href1="${proto}/${sourceforge}/sourceforge/kxml/kxml2-src-2.2.2.zip"
          target="${sarch}/kxml2-src-2.2.2.zip"
          unpack1="unpack-zip-src"
          unpackloc1="kxml2-src-2.2.2"
          sha="d99f0b0f79a7ce8e1867c547599da27582076700" />

    <!--log4j-1.2.8.jar-->
    <wget id="log4j"
          href1=
"${proto}/archive.apache.org/dist/logging/log4j/1.2.8/jakarta-log4j-1.2.8.tar.gz"
          target="${sarch}/jakarta-log4j-1.2.8.tar.gz"
          unpack1="unpack-log4j"
          sha="969c0576ca20e29da5c4bffcb9833d12f702b545" />

    <!--proguard.jar NOTE: Src and bin package the same, so getting one will get the other-->
    <wget id="proguard"
          href1="${proto}/${sourceforge}/sourceforge/proguard/proguard3.5.tar.gz"
          target="${sarch}/proguard3.5.tar.gz"
          unpack1="unpack-proguard"
          sha="1d9416b7f041e0a29ced257d3bd922b16d1ff39e" />

    <!--xercesImpl.jar, xmlParserAPIs.jar-->
    <wget id="xerces-src"
          href1=
"${proto}/archive.apache.org/dist/xml/xerces-j/old_xerces2/Xerces-J-src.2.4.0.tar.gz"
          target="${sarch}/Xerces-J-src.2.4.0.tar.gz"
          unpack1="unpack-tgz-src"
          sha="53b950eace9bd5d1fe55b76d2b63efb4607c6318" />

  </target>

  <target name="unpack-tgz-src" >
    <untar src="${target}" dest="${src}/${unpackloc1}" compression="gzip" />
  </target>

  <target name="unpack-tbz-src" >
    <untar src="${target}" dest="${src}/${unpackloc1}" compression="bzip2" />
  </target>

  <target name="unpack-zip-src" >
    <unzip src="${target}" dest="${src}/${unpackloc1}" />
  </target>

</project>
