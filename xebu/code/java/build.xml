<?xml version="1.0"?>
<!--
Copyright 2006 Helsinki Institute for Information Technology

This file is a part of Fuego middleware.  Fuego middleware is free
software; you can redistribute it and/or modify it under the terms
of the MIT license, included as the file MIT-LICENSE in the Fuego
middleware source distribution.  If you did not receive the MIT
license with the distribution, write to the Fuego Core project at
fuego-core-users@hoslab.cs.helsinki.fi.
-->

<!--
This is the build file for Fuego Core Java code.  The available
targets are:

compile: the default, will compile the sources into directory build
me: compile the J2ME parts into directory =build
me-run: start the phone emulator with the J2ME classes loaded
javadoc: create API documentation in HTML into docs/=api
bugs: use findbugs to output file ++fb.xml containing the information
      in a format feedable to the findbugs program
clean: remove the compiled files and documentation

Other targets exist, but these are either dependencies of the above
targets, or only meant for project internal use.
-->

<project name="FuegoCore" default="compile" basedir=".">
  <property name="src" value="src" />
  <property name="res" value="res" />
  <property name="build" value="=build" />
  <property name="build.class" value="${build}/classes" />
  <property name="build.lib" value="${build}/lib" />
  <property name="docs" value="docs" />
  <property name="doclists" value="${docs}/lists" />
  <property name="javadocs" value="${docs}/=api" />
  <property name="javadoc-access" value="protected"/>

  <property name="depend" value="=depend" />
  <property name="packages" value="fuegocore.*" />
  <property name="extdirs" value="contrib/jar" />

  <property name="wtk.home" value="/opt/java/WTK2.2" />
  <property name="wtk.cldc.version" value="1.0" />
  <property name="wtk.midp.version" value="1.0" />
  <property name="lib.cldc" value="${wtk.home}/lib/cldcapi10.jar" />
  <property name="lib.midp" value="${wtk.home}/lib/midpapi10.jar" />
  <property name="build.me" value="${build}/me" />
  <property name="me.project" value="fcme" />
  <property name="me.packages" value="fcme.*" />
  <property name="me.javadocs" value="${docs}/=me-api" />
  <property name="me.obfuscator" value="null" />

  <path id="extpath">
    <fileset dir="contrib/jar">
      <include name="**/*.jar" />
      <include name="**/*.zip" />
    </fileset>
  </path>

  <path id="build.libpath">
    <fileset dir="${build.lib}">
      <include name="**/*.jar" />
      <include name="**/*.zip" />
    </fileset>
  </path>

  <!-- When adding to this path, also add an -injars to me-obfuscate -->
  <path id="me.classpath">
    <fileset dir="contrib/jar">
      <include name="kxml2.jar" />
    </fileset>
  </path>

  <property name="doctitle" value="Fuego Core Service Interfaces" />
  <property name="me.doctitle"
            value="Fuego Core Micro Edition Service Interfaces" />

  <target name="contrib-check" >
    <uptodate property="contrib.ok" 
              srcfile="contrib/contrib.xml" 
              targetfile="contrib/=binstamp" />
  </target>

  <target name="contrib-message" unless="contrib.ok" >
    <echo message="You need to ensure your contrib directory is up-to-date." />
    <echo message="To update automatically, run ant get-contrib" />
    <echo message="If you update manually, run ant ok-contrib to mark contrib up-to-date." />
    <echo message="Sources for contrib are obtained by running ant get-contrib-src" />
    <fail message="See message above." />
  </target>

  <target name="init" depends="contrib-check,contrib-message" >
    <mkdir dir="${build.class}" />
    <mkdir dir="${build.lib}" />
    <depend srcdir="${src}" destdir="${build.class}" cache="${depend}"
            closure="true" />
  </target>

  <target name="compile" depends="init">
    <javac srcdir="${src}" destdir="${build.class}" debug="on"
           deprecation="on" source="1.4" target="1.4">
      <include name="fuegocore/**" />
      <extdirs path="${extdirs}" />
    </javac>

    <copy todir="${build.class}">
      <fileset dir="${res}">
	<exclude name=".arch-ids/**" />
      </fileset>
    </copy>
    <jar jarfile="${build.lib}/fc-util.jar" basedir="${build.class}">
      <include name="fuegocore/util/**" />
      <include name="log4j/**" />
      <include name="util/**" />
      <exclude name="**/.arch-ids/**" />
    </jar>
    <jar jarfile="${build.lib}/fc-message.jar" basedir="${build.class}">
      <include name="fuegocore/message/**" />
    </jar>
    <jar jarfile="${build.lib}/fc-examples.jar" basedir="${build.class}">
      <include name="fuegocore/examples/**" />
    </jar>
  </target>

  <target name="test" depends="compile">
    <condition property="testclass" value="fuegocore.util.RootSuite" >
      <not><isset property="testclass" /></not>
    </condition>
    <java classname="junit.textui.TestRunner" output="++test.log" fork="true">
      <!--jvmarg value="-verbose:class"/-->
      <jvmarg value="-enableassertions"/>
      <arg value="${testclass}"/>
      <classpath>
        <fileset dir="${build.lib}" includes="*.jar" />
        <path refid="extpath" />
	<pathelement path="${java.class.path}/"/>
      </classpath>
    </java>
    <echo message="Test run results saved in file ++test.log"/>
  </target>

  <target name="testgui" depends="compile">
    <java classname="junit.swingui.TestRunner" fork="true">
      <jvmarg value="-enableassertions"/>
      <arg value="fuegocore.util.RootSuite"/>
      <classpath>
        <fileset dir="${build.lib}" includes="*.jar" />
        <path refid="extpath" />
	<pathelement path="${java.class.path}/"/>
      </classpath>
    </java>
  </target>

  <target name="testconsole" depends="compile">
    <java classname="fuegocore.util.tests.TestConsole">
      <!--jvmarg value="-verbose:class"/-->
      <jvmarg value="-enableassertions"/>
      <!--arg value="reserved for later use"/-->
      <classpath>
        <fileset dir="${build.lib}" includes="*.jar" />
        <path refid="extpath" />
	<pathelement path="${java.class.path}/"/>
      </classpath>
    </java>
    <!--echo message="Test run results saved in file test.log"/-->
  </target>

  <target name="javadoc" depends="compile">
    <mkdir dir="${javadocs}" />
    <javadoc packagenames="${packages}"
             sourcepath="${src}"
             Overview="${src}/overview.html"
             destdir="${javadocs}"
             Extdirs="${extdirs}"
             classpath="${build.class}"
             author="true" version="true" use="true"
             windowtitle="Fuego Core API"
             doctitle="${doctitle}"
	     access="${javadoc-access}"
	     source="1.4">
      <link offline="true" href="http://java.sun.com/j2se/1.4/docs/api"
            packagelistLoc="${doclists}/sun" />
      <link offline="true" href="http://www.xmlpull.org/v1/doc/api"
            packagelistLoc="${doclists}/xmlpull" />
      <link offline="true" href="http://www.junit.org/junit/javadoc/3.8.1"
            packagelistLoc="${doclists}/junit" />
      <link offline="true" href="http://jakarta.apache.org/commons/logging/api"
            packagelistLoc="${doclists}/commons-logging" />
    </javadoc>
  </target>

  <target name="javadoc-full" >
   <antcall target="javadoc">
    <param name="javadoc-access" value="package" />
   </antcall>
  </target>

  <target name="bugs" depends="compile">
    <taskdef name="findbugs" classpath="contrib/jar/findbugs-ant.jar"
           classname="edu.umd.cs.findbugs.anttask.FindBugsTask" />

    <findbugs outputFile="++fb.xml" reportLevel="low"
              classpathref="extpath" pluginlist="contrib/jar/coreplugin.jar"
              jvmargs="-Xmx256M">
      <class location="${build.class}/fuegocore" />
      <auxClasspath>
        <path refid="extpath" />
      </auxClasspath>
      <sourcePath path="${src}" />
    </findbugs>
  </target>

  <target name="clean">
    <delete dir="${build}" />
    <delete dir="${javadocs}" />
    <delete dir="${me.javadocs}" />
  </target>

  <target name="me-clean">
    <delete dir="${build.me}" />
    <delete dir="${me.javadocs}" />
  </target>

  <target name="me-props">
    <taskdef name="wtkjad" classpath="contrib/jar/antenna-bin-0.9.13.jar"
             classname="de.pleumann.antenna.WtkJad" />
  </target>

  <target name="me-init" depends="init,me-props">
    <mkdir dir="${build.me}" />
    <depend srcdir="${src}" destdir="${build.me}/classes" cache="${depend}"
            closure="true" />
  </target>

  <target name="me-compile" depends="me-init">
    <mkdir dir="${build.me}/classes" />
    <javac destdir="${build.me}/classes" srcdir="${src}" debug="on"
           deprecation="on" target="1.1" source="1.3"
           includesfile="${src}/me-sources"
           excludesfile="${src}/me-non-sources">
      <bootclasspath>
        <pathelement location="${lib.cldc}" />
        <pathelement location="${lib.midp}" />
      </bootclasspath>
      <classpath>
        <path refid="me.classpath" />
      </classpath>
    </javac>
    <jar basedir="${build.me}/classes"
         jarfile="${build.me}/fcme-comp.jar" />
    <uptodate property="obf.not" targetfile="${build.me}/fcme-obf.jar"
              srcfile="${build.me}/fcme-comp.jar" />
  </target>

  <target name="me-null" depends="me-compile" unless="obf.not">
    <mkdir dir="${build.me}/obfuscated" />
    <unjar src="${build.me}/fcme-comp.jar"
           dest="${build.me}/obfuscated" />
    <unjar src="contrib/jar/kxml2.jar" dest="${build.me}/obfuscated" />
    <copy file="${build.me}/fcme-comp.jar"
          tofile="${build.me}/fcme-obf.jar" />
  </target>

  <target name="me-proguard" depends="me-compile" unless="obf.not">
    <mkdir dir="${build.me}/obfuscated"/>
    <java fork="yes" jar="contrib/jar/proguard.jar">
      <arg line="-libraryjars ${lib.cldc}" />
      <arg line="-libraryjars ${lib.midp}" />
      <arg line="-injars ${build.me}/fcme-comp.jar" />
      <arg line="-injars contrib/jar/kxml2.jar" />
      <arg line="-outjar ${build.me}/fcme-obf.jar" />
      <arg line="-keep 'public class * extends
           javax.microedition.midlet.MIDlet'" />
      <arg line="-defaultpackage" />
    </java>

    <unjar src="${build.me}/fcme-obf.jar"
           dest="${build.me}/obfuscated" />
  </target>

  <target name="me-preverify" depends="me-props">
    <antcall target="me-${me.obfuscator}" />
    <mkdir dir="${build.me}/preverified" />
    <exec executable="${wtk.home}/bin/preverify">
      <arg line="-classpath ${lib.cldc}:${lib.midp}" />
      <arg line="-d ${build.me}/preverified" />
      <arg line="${build.me}/obfuscated" />
    </exec>
  </target>

  <target name="me-checkjar">
    <uptodate property="jar.not" srcfile="${build.me}/fcme-obf.jar"
              targetfile="${build.lib}/${me.project}.jar" />
  </target>

  <target name="me-jar" depends="me-preverify,me-checkjar" unless="jar.not">
    <jar basedir="${build.me}/preverified"
         jarfile="${build.lib}/${me.project}.jar"
         manifest="${src}/fcme.mf">
      <include name="**/*.class" />
    </jar>
  </target>

  <target name="me" depends="me-jar" unless="jar.not">
    <wtkjad jadfile="${build.lib}/${me.project}.jad"
            jarfile="${build.lib}/${me.project}.jar"
            name="FuegoCore" vendor="Fuego Core project"
            version="2.0">
      <midlet name="XebuDemo" class="fcme.examples.message.XebuDemo" />
    </wtkjad>
  </target>

  <target name="me-doc" depends="me">
    <mkdir dir="${me.javadocs}" />
    <javadoc packagenames="${me.packages}"
             excludepackagenames="fcme.tests"
             sourcepath="${src}"
             Overview="${src}/me-overview.html"
             destdir="${me.javadocs}"
             classpath="${build.me}/classes"
             author="true" version="true" use="true"
             windowtitle="Fuego Core Micro Edition API"
             doctitle="${me.doctitle}"
	     access="${javadoc-access}"
	     source="1.1">
      <bootclasspath>
        <pathelement location="${lib.cldc}" />
        <pathelement location="${lib.midp}" />
      </bootclasspath>
      <classpath>
        <path refid="me.classpath" />
      </classpath>
      <link offline="true" href="http://www.wmlscript.it/j2me/api20"
            packagelistLoc="${doclists}/midp" />
    </javadoc>
  </target>

  <target name="me-test" depends="compile,me-jar">
    <javac srcdir="${src}" destdir="${build.class}" debug="on"
           deprecation="on">
      <include name="fcme/tests/**" />
      <extdirs path="${extdirs}" />
      <compilerarg line="-source 1.4" compiler="javac1.4"/>
    </javac>
    <jar jarfile="${build.lib}/fcme-test.jar" basedir="${build.class}">
      <include name="fcme/tests/**" />
    </jar>
    <java classname="junit.textui.TestRunner" output="++me-test.log"
          fork="true">
      <!--jvmarg value="-verbose:class"/-->
      <jvmarg value="-enableassertions"/>
      <arg value="fcme.tests.MeSuite"/>
      <classpath>
        <fileset dir="${build.lib}" includes="*.jar" />
        <path refid="extpath" />
	<pathelement path="${java.class.path}/"/>
      </classpath>
    </java>
    <echo message="Test run results saved in file ++me-test.log"/>
  </target>

  <target name="me-run" depends="me">
    <exec executable="${wtk.home}/bin/emulator">
      <arg line="-classpath ${lib.cldc}:${lib.midp}:${build.lib}/${me.project}.jar" />
      <arg line="-Xdescriptor ${build.lib}/${me.project}.jad" />
    </exec>
  </target>

  <!-- Contrib stuff -->

  <target name="ok-contrib" >
    <touch file="contrib/=binstamp" />
  </target>

  <target name="get-contrib" >
    <ant antfile="contrib.xml" dir="contrib" target="binaries" />
    <antcall target="clean" /> 
    <antcall target="ok-contrib" />
  </target>

  <target name="get-contrib-src" >
    <ant antfile="contrib.xml" dir="contrib" target="source" />
  </target>

</project>
